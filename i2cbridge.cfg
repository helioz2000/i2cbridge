// i2cbridge configuration file

// This value determines the granularity of the measuring system
mainloopinterval = 250;		// [ms]

// MQTT broker parameters
mqtt = {
	broker = "127.0.0.1";
	debug = false;			// only works in command line mode
	retain_default = true;	// mqtt retain default setting for publish
	noreadonexit = false;	// publish noread value of all tags on exit
	clearonexit = false;	// clear all tags from mosquitto persistance store on exit
};

// Updatecycles definition
// every modbus tag is read in one of these cycles
// id - a freely defined unique integer which is referenced in the tag definition
// interval - the time between reading, in seconds
updatecycles = (
	{
	id = 1;
	interval = 1;	// seconds
	},
	{
	id = 2;
	interval = 5;
	},
	{
	id = 3;
	interval = 10;
	},
	{
	id = 4;
	interval = 20;
	},
	{
	id = 5;
	interval = 30;
	},
	{
	id = 6;
	interval = 60;
	},
	{
	id = 12;
	interval = 120;		// 2 minutes
	},
	{
	id = 30
	interval = 300;		// 5 minutes
	},
	{
	id = 60;
	interval = 600;		// 10 minutes
	},
	{
	id = 180;
	interval = 1800;	// 30 minutes
	}
)

// I2C device list
// definition of every I2C device and it's associated tags
// name = a freely definable name
// id = a unique number between 1 and 254
// enabled = true or false to disable (ignore) any tags in slave
// tags = a list of tag definitions to be read at the indicated interval
// tag parameter description: 
// address: reference to the I2C device variable
// group: not used
// update_cycle: the id of the cycle for updating and publishing this tag
// topic: mqtt topic under which to publish the value, an empty string will prevent publishing
// retain: retain value for mqtt publish to override the default setting mqtt.retain_default
// format: printf style format for mqtt publication, NOTE: all values are type "float"
// multiplier: raw value (from slave) will be multiplied by this factor
// offset: value to be added after above multiplication
// noreadvalue: value published when modbus read fails
// noreadaction: -1 = do nothing (default), 0 = publish null 1 = noread value
// noreadignore: number of noreads to ignore before taking noreadaction 
i2cdevices = (
	{
	name = "Env Temp";
	id = 1;
	enabled = TRUE;
	tags = 
		(
			{
			address = 101;
			update_cycle = 4;		// as per "updatecycles" configuration
			topic = "vk2ray/pwr/env/temp";
			format = "%.1f"
			multiplier = 0.1;
			noreadvalue = 20.0;
			}
		)
	},
	{
	name = "Rack Temp";
	id = 2;
	enabled = FALSE;
	tags =
		(
			{
			address = 201;
			update_cycle = 4;
			topic = "vk2ray/rack/temp";
			format = "%.1f"
			multiplier = 0.1;
			noreadvalue = 20.0;
			}
		)
	},
	{
	name = "Pi CPU Temp";
	id = 3;
	enabled = TRUE;
	tags =
		(
			{
			address = 301;
			update_cycle = 4;
			topic = "vk2ray/pwr/pi/cpu/temp";
			format = "%.1f"
			multiplier = 0.1;
			} 
		)
	},
	{
	name = "VI Monitor";
	id = 4;
	enabled = TRUE;
	tags =
		(
			{
			address = 401;
			update_cycle = 1;
			topic = "vk2ray/pwr/vimon/batv";
			format = "%0.2f";
			multiplier = 0.001;
			},
			{
			address = 402;
			update_cycle = 1;
			topic = "vk2ray/pwr/vimon/bati";
			format = "%0.1f";
			},
			{
			address = 403;
			update_cycle = 4;
			topic = "vk2ray/pwr/vimon/bat_temp";
			format = "%0.2f";
			multiplier = 0.01;
			}
		)
	},
	{
	name = "Power Dist 1";
	id = 5;
	enabled = FALSE;
	tags = 
		(
			{
			address = 11;
			update_cycle = 4;		// as per "updatecycles" configuration
			topic = "vk2ray/pwr/dist/current1";
			format = "%.0f"
			multiplier = 1.0;
			offset = 0.0;
			noreadvalue = 0.0;
			}
		);
	},
	{
	name = "Accumulators";
	id = 10;
	enabled = true;
	tags =
		(
			{
			address = 1001;
			update_cycle = 1;
			topic = "vk2ray/pwr/vimon/power";
			format = "%0.1f";
			multiplier = 0.1;
			},
			{
			address = 1002;
			update_cycle = 1;
			topic = "vk2ray/pwr/vimon/power_acc";
			format = "%.0f";
			}
		);
	}
)


